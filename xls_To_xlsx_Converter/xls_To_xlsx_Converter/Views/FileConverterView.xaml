<UserControl x:Class="xls_To_xlsx_Converter.Views.FileConverterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:helpers="clr-namespace:xls_To_xlsx_Converter.Helpers"
             xmlns:model="clr-namespace:xls_To_xlsx_Converter.Model"
             xmlns:cc="clr-namespace:xls_To_xlsx_Converter.CustomControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" AllowDrop="True"
             helpers:FileDragDropHelper.IsFileDragDropEnabled="True"
             helpers:FileDragDropHelper.FileDragDropTarget="{Binding}">
    <UserControl.Resources>
        <Style x:Key="MainButton_Style" TargetType="Button">
            <Setter Property="Background" Value="LightGreen"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="DarkGreen"/>
            <Setter Property="BorderBrush" Value="DarkGreen"/>
            <Setter Property="BorderThickness" Value="0 0 0 3"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="1 2 1 0"
                                             From="0 0 0 3" Duration="0:0:0.100"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.PreviewMouseUp">
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="0 0 0 3"
                                                From="1 2 1 0" Duration="0:0:0.100"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="DodgerBlue"
                                            From="DarkGreen" Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="DarkGreen"
                                            From="DodgerBlue" Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MainMyButton_Style" TargetType="cc:MyButton">
            <Setter Property="Background" Value="IndianRed"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="DarkRed"/>
            <Setter Property="BorderBrush" Value="DarkRed"/>
            <Setter Property="BorderThickness" Value="0 0 0 3"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Width" Value="0"/>
            <Style.Triggers>
                <Trigger Property="NonSelectedFilesExist" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width" From="0"
                                             To="300" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width" From="300"
                                             To="0" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="1 2 1 0"
                                             From="0 0 0 3" Duration="0:0:0.100"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.PreviewMouseUp">
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="0 0 0 3"
                                                From="1 2 1 0" Duration="0:0:0.100"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="DodgerBlue"
                                            From="DarkRed" Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="DarkRed"
                                            From="DodgerBlue" Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ConvertionStatus_Style" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Style.Triggers>
                <Trigger Property="Text" Value="Selected">
                    <Setter Property="Foreground" Value="Green"/>
                </Trigger>
                <Trigger Property="Text" Value="Not Selected">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="Text" Value="Error">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="Text" Value="Pending...">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="Text" Value="Converted">
                    <Setter Property="Foreground" Value="Green"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CustomDockPanel_Style" TargetType="{x:Type cc:CustomDockPanel}">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Margin" Value="2"/>
            <Style.Triggers>
                <Trigger Property="IsIncluded" Value="True">
                    <Setter Property="Background" Value="LightSteelBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RemoveButton_Style" BasedOn="{StaticResource ResourceKey=NoChromeButton}" TargetType="{x:Type cc:ItemRemovalButton}">
            <Setter Property="Background" Value="IndianRed"/>
            <Setter Property="Foreground" Value="Gainsboro"/>
            <Setter Property="Width" Value="60"/>
            <Style.Triggers>
                <Trigger Property="IsClosed" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width" From="60"
                                                 To="0" Duration="0:0:0.050"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" From="IndianRed"
                                            To="Gainsboro" Duration="0:0:0.200"/>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" From="Gainsboro"
                                            To="Red" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" From="Gainsboro"
                                            To="IndianRed" Duration="0:0:0.200"/>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" From="Red"
                                            To="Gainsboro" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid RenderOptions.EdgeMode="Aliased">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="AUTO"/>
            <ColumnDefinition Width="10"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"/>
            <RowDefinition Height="AUTO"/>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>

        <TextBlock Text="Drag and drop xls files to be converted. Folders work too." Grid.Column="1" Grid.ColumnSpan="2"
                   Grid.Row="1" FontSize="24" TextWrapping="Wrap"/>
        <ScrollViewer Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Background="Gainsboro"
                      PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
            <ListView ItemsSource="{Binding fileConverter.FilesToConvert}" Background="Gainsboro"
                      HorizontalContentAlignment="Stretch">
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type model:FileData}">
                        <cc:CustomDockPanel Style="{StaticResource CustomDockPanel_Style}"
                                            IsIncluded="{Binding IsIncluded}">
                            <CheckBox IsChecked="{Binding IsIncluded}" Margin="5 0" 
                                      IsEnabled="{Binding DataContext.convertionData.IsNotConvertingFiles, 
                                                RelativeSource={RelativeSource AncestorType=ScrollViewer}}"
                                      Command="{Binding DataContext.UpdateFilesNotSelectedCommand, 
                                                RelativeSource={RelativeSource AncestorType=ScrollViewer}}">
                                <CheckBox.LayoutTransform>
                                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                                </CheckBox.LayoutTransform>
                            </CheckBox>
                            <StackPanel>
                                <TextBlock Text="{Binding FileDetails.Name}" Foreground="MediumPurple"
                                       FontSize="20" FontWeight="SemiBold" Margin="10 5"
                                       />
                                <TextBlock Text="{Binding FileDetails.DirectoryName}" FontSize="15"
                                           Margin="10 5"/>
                            </StackPanel>
                            <cc:ItemRemovalButton Content="Remove" HorizontalAlignment="Right" DockPanel.Dock="Right" 
                                    Style="{StaticResource RemoveButton_Style}"
                                    IsEnabled="{Binding DataContext.convertionData.IsNotConvertingFiles, 
                                                RelativeSource={RelativeSource AncestorType=ScrollViewer}}"
                                    Command="{Binding DataContext.RemoveListedFileCommand,
                                             RelativeSource={RelativeSource AncestorType=ScrollViewer}}"
                                    CommandParameter="{Binding}"/>
                            <TextBlock Text="{Binding ConversionStatus}" Margin="5 0"
                                       Style="{StaticResource ConvertionStatus_Style}"
                                       DockPanel.Dock="Right"/>
                        </cc:CustomDockPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </ScrollViewer>

        <Button Content="Convert Files" Grid.Column="1" Grid.Row="3" Margin="5 15" 
                Style="{StaticResource MainButton_Style}"
                Command="{Binding ConvertFilesCommand}"/>
        <cc:MyButton Content="Remove all 'Not Selected' files" Grid.Column="2" Grid.Row="3" Margin="5 15" 
                NonSelectedFilesExist="{Binding fileConverter.FilesNotSelected}"
                IsEnabled="{Binding convertionData.IsNotConvertingFiles}"
                Style="{StaticResource MainMyButton_Style}"
                Command="{Binding RemoveAllNonSelectedListedFilesCommand}"
                />
        <cc:MyBanner Grid.RowSpan="3" Grid.ColumnSpan="3" IsExpandedInfoBanner="{Binding fileConverter.IsExpandedInfoBanner}"
                     BannerTemplateIndex="{Binding fileConverter.SelectedBannerIndex}"
                     IsExpandedDialogBanner="{Binding fileConverter.IsExpandedDialogBanner}"
                     AltBannerIsExpanded="{Binding fileConverter.AltBannerExpanded}"/>
    </Grid>
</UserControl>
